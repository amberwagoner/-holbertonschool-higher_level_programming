=============================
The ``0-add_integer`` module
=============================

```add_integer``` will return the integer value of the
addition of its two arguments using the ``+`` operator

Import the function:
    >>> add_integer = __import__('0-add_integer').add_integer

Success Cases:

     >>> print(add_integer(1, 2))
     3
     >>> print(add_integer(-1, 2))
     1
     >>> print(add_integer(1.5, 2.9))
     3
     >>> print(add_integer(-2.9, 1))
     -1

Error Cases:

    >>> add_integer(True, False)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2, float("inf"))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(5, float("nan"))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(2, "School")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer("Hello", "World")
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer
